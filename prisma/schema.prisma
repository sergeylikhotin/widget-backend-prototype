generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int           @id @default(autoincrement())
  email          String        @unique
  password       String?
  roles          Role[]        @default([manager])
  widget         Widget[]
  caslAbility    CaslAbility[]
  activationCode String?       @unique
}

enum Role {
  super_admin
  admin
  customer
  manager
  content_manager
}

model CaslAbility {
  id           Int                @id @default(autoincrement())
  role         Role
  action       CaslAction
  type         CaslPermissionType
  modelName    CaslModels
  sharedWith   User?              @relation(fields: [sharedWithId], references: [id])
  sharedWithId Int?
  resourceId   Int?
}

enum CaslPermissionType {
  can
  cannot
}

enum CaslAction {
  read
  create
  update
  delete
  manage
}

model Widget {
  id       Int    @id @default(autoincrement())
  name     String
  author   User?  @relation(fields: [authorId], references: [id])
  authorId Int
}

model Schema {
  id   Int    @id @default(autoincrement())
  name String

  components Component[]
}

model Component {
  id Int @id @default(autoincrement())

  schema   Schema? @relation(fields: [schemaId], references: [id])
  schemaId Int?

  name String

  parentId Int?
  parent   Component?  @relation("ComponentToComponent", fields: [parentId], references: [id])
  children Component[] @relation("ComponentToComponent")
}

enum CaslModels {
  all
  User
  Widget
  Schema
  Component
}
